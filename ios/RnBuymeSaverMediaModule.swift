import ExpoModulesCore
import Photos

public class RnBuymeSaverMediaModule: Module {
  public func definition() -> ModuleDefinition {
    Name("RnBuymeSaverMedia")

    Constants([
      "PI": Double.pi
    ])

    Events("DownloadProgress")

    Function("hello") {
      return "Hello world! üëã"
    }

    AsyncFunction("downloadFileToGallery") { (urlString: String) in
      guard let url = URL(string: urlString) else {
        throw NSError(domain: "Invalid URL", code: 400, userInfo: nil)
      }

      let downloader = FileDownloader()
      downloader.startDownload(from: url) { progress in
        self.sendEvent("DownloadProgress", ["progress": progress])
      }
    }
  }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
class FileDownloader: NSObject, URLSessionDownloadDelegate {
  private var onProgress: ((Double) -> Void)?

  func startDownload(from url: URL, onProgress: @escaping (Double) -> Void) {
    self.onProgress = onProgress
    let session = URLSession(configuration: .default, delegate: self, delegateQueue: nil)
    let downloadTask = session.downloadTask(with: url)
    downloadTask.resume()
  }

  // –ú–µ—Ç–æ–¥ –¥–µ–ª–µ–≥–∞—Ç–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  func urlSession(_ session: URLSession, downloadTask: URLSessionDownloadTask, didWriteData bytesWritten: Int64, totalBytesWritten: Int64, totalBytesExpectedToWrite: Int64) {
    let progress = Double(totalBytesWritten) / Double(totalBytesExpectedToWrite) * 100
    onProgress?(progress)
  }

  func urlSession(_ session: URLSession, downloadTask: URLSessionDownloadTask, didFinishDownloadingTo location: URL) {
    let fileManager = FileManager.default
    let cachesDirectory = fileManager.urls(for: .cachesDirectory, in: .userDomainMask)[0]
    let cachedFileURL = cachesDirectory.appendingPathComponent(location.lastPathComponent)

    do {
      // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –∫—ç—à–µ
      if fileManager.fileExists(atPath: cachedFileURL.path) {
        try fileManager.removeItem(at: cachedFileURL)
      }

      // –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Ñ–∞–π–ª –≤ –∫—ç—à
      try fileManager.moveItem(at: location, to: cachedFileURL)

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –≤ –≥–∞–ª–µ—Ä–µ—é
      PHPhotoLibrary.shared().performChanges({
        PHAssetChangeRequest.creationRequestForAssetFromImage(atFileURL: cachedFileURL)
      }) { success, error in
        if success {
          self.onProgress?(100)
        } else {
          print("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –≥–∞–ª–µ—Ä–µ—é: \(String(describing: error))")
        }
      }
    } catch {
      print("–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –≤ –∫—ç—à: \(error)")
    }
  }
}
